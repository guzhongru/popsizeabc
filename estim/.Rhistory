output <- calcVarExplain(args[1])
if (length(args) == 2){
write(paste(paste0("Standard error for all entries in the covariance",
"matrix estimated from the data"),
output$StdErr, sep = "\t"), file = stderr())
write(paste(paste0("Variance of relatedness between populations",
"explained by the model"),
output$VarExplain, sep = "\t"), file = stderr())
}
write(paste(paste0("Standard error for all entries in the covariance ",
"matrix estimated from the data"),
output$StdErr, sep = "\t"), file = stdout())
write(paste(paste0("Variance of relatedness between populations ",
"explained by the model"),
output$VarExplain, sep = "\t"), file = stdout())
plot_tree("programs_that_work/treemix/treemix_/treemix49.m0")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m2")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m2")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m0")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m2")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m0")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m1-nr")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m2")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m0")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m0")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m2")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m1")
plot_tree("programs_that_work/treemix/treemix_/testforce")
plot_tree("programs_that_work/treemix/treemix_/treemix54")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m2")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m3")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m1")
plot_resid("programs_that_work/treemix/treemix_/treemix54.m1")
plot_resid("programs_that_work/treemix/treemix_/treemix54.m1", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix54.m2", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix54", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix49.m0", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix49.m1", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix49.m2", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix49", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix49.m0", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix49.m1", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix49.m2", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix54.m2", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix54.m1", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix54.m2", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix54", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix54", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix54.m0", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix54.m1", "programs_that_work/treemix/poporder2")
plot_resid("programs_that_work/treemix/treemix_/treemix54.m2", "programs_that_work/treemix/poporder2")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m2")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m0")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m2")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m0")
plot_tree("programs_that_work/treemix/treemix_/treemix54.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m1")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m0")
plot_tree("programs_that_work/treemix/treemix_/treemix49.m2")
knitr::opts_chunk$set(echo = TRUE)
Fig1B_helminth_A <- read_csv("~/github_repos/helminth_selection/Fig1B_helminth-A-0-piechart.csv")
library(readr)
#library(trelliscopejs)
library(tidyverse)
#library(plotly)
library(scales)
Fig1B_helminth_A <- read_csv("~/github_repos/helminth_selection/Fig1B_helminth-A-0-piechart.csv")
Fig1B_helminth_A0 <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-A-0-piechart.csv")
view(Fig1B_helminth_A0)
View(Fig1B_helminth_A0)
ggplot(data=Fig1B_helminth_A0,aes(x=sel,y=(orig), color = as.factor(mig))) + geom_line(size=2) + ylab("Average Number of Origins") + xlab("Selection Coefficient") + theme_bw() + ggtitle("Additive mig/Sel")
ggplot(data=Fig1B_helminth_A0, aes(x = reorder(mig,sel), y = piHap/20000, fill = idHap)) + geom_bar(width=3000,stat="identity") + facet_grid(mig ~ sel, drop=FALSE) + coord_polar(theta="y") + scale_fill_manual(values=c("S"="blue","R0"="orangered4","R1"="orange","R2"="gold","R3"="lightcoral","R4"="firebrick2","R5"="purple","R6"="violet","R7"="coral2","R8"="darkorchid3","R9"="indianred4", "R10"="lightblue","R11"="khaki","R12"="yellow4","R13"="coral1","R14"="coral3")) + scale_y_continuous(labels = percent_format(),limits=c(0,1),breaks=c(0.25,0.5,0.75,1)) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("additive")
ggplot(data=Fig1B_helminth_A0, aes(x = reorder(mig,sel), y = piHap, fill = idHap)) + geom_bar(width=1,stat="identity") + facet_grid(mig ~ sel, drop=FALSE) + coord_polar(theta="y") + scale_fill_manual(values=c("R0"="blue","R1"="orangered4","R2"="orange","R3"="gold","R4"="lightcoral","R5"="firebrick2","R6"="purple","R7"="violet","R8"="coral2","R9"="darkorchid3","R10"="indianred4", "R11"="lightblue","R12"="khaki","R13"="yellow4","R14"="coral1","R15"="coral3")) + scale_y_continuous(labels = percent_format(),limits=c(0,1),breaks=c(0.25,0.5,0.75,1)) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("additive")
ggplot(data=Fig1B_helminth_A0, aes(x = reorder(mig,sel), y = piHap, fill = idHap)) + geom_bar(width=10,stat="identity") + facet_grid(mig ~ sel, drop=FALSE) + coord_polar(theta="y") + scale_fill_manual(values=c("R0"="blue","R1"="orangered4","R2"="orange","R3"="gold","R4"="lightcoral","R5"="firebrick2","R6"="purple","R7"="violet","R8"="coral2","R9"="darkorchid3","R10"="indianred4", "R11"="lightblue","R12"="khaki","R13"="yellow4","R14"="coral1","R15"="coral3")) + scale_y_continuous(labels = percent_format(),limits=c(0,1),breaks=c(0.25,0.5,0.75,1)) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("additive")
ggplot(data=Fig1B_helminth_A0, aes(x = reorder(mig,sel), y = piHap/20, fill = idHap)) + geom_bar(width=100,stat="identity") + facet_grid(mig ~ sel, drop=FALSE) + coord_polar(theta="y") + scale_fill_manual(values=c("R0"="blue","R1"="orangered4","R2"="orange","R3"="gold","R4"="lightcoral","R5"="firebrick2","R6"="purple","R7"="violet","R8"="coral2","R9"="darkorchid3","R10"="indianred4", "R11"="lightblue","R12"="khaki","R13"="yellow4","R14"="coral1","R15"="coral3")) + scale_y_continuous(labels = percent_format(),limits=c(0,1),breaks=c(0.25,0.5,0.75,1)) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("additive")
ggplot(data=Fig1B_helminth_A0, aes(x = reorder(mig,sel), y = piHap/20, fill = idHap)) + geom_bar(width=200,stat="identity") + facet_grid(mig ~ sel, drop=FALSE) + coord_polar(theta="y") + scale_fill_manual(values=c("R0"="blue","R1"="orangered4","R2"="orange","R3"="gold","R4"="lightcoral","R5"="firebrick2","R6"="purple","R7"="violet","R8"="coral2","R9"="darkorchid3","R10"="indianred4", "R11"="lightblue","R12"="khaki","R13"="yellow4","R14"="coral1","R15"="coral3")) + scale_y_continuous(labels = percent_format(),limits=c(0,1),breaks=c(0.25,0.5,0.75,1)) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("additive")
Fig1B_helminth_A0 <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-A-0-piechart.csv")
Fig1B_helminth_Ar <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-A-8-piechart.csv")
Fig1B_helminth_Ar <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-A-8.0-piechart.csv")
Fig1B_helminth_D0 <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-D-0-piechart.csv")
Fig1B_helminth_Dr <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-D-8.0-piechart.csv")
ggplot(data=Fig1B_helminth_D0, aes(x = reorder(mig,sel), y = piHap/20, fill = idHap)) + geom_bar(width=200,stat="identity") + facet_grid(mig ~ sel, drop=FALSE) + coord_polar(theta="y") + scale_fill_manual(values=c("R0"="blue","R1"="orangered4","R2"="orange","R3"="gold","R4"="lightcoral","R5"="firebrick2","R6"="purple","R7"="violet","R8"="coral2","R9"="darkorchid3","R10"="indianred4", "R11"="lightblue","R12"="khaki","R13"="yellow4","R14"="coral1","R15"="coral3")) + scale_y_continuous(labels = percent_format(),limits=c(0,1),breaks=c(0.25,0.5,0.75,1)) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("dominant")
ggplot(data=Fig1B_helminth_D0, aes(x = reorder(mig,sel), y = piHap/20, fill = idHap)) + geom_bar(width=200,stat="identity") + facet_grid(mig ~ sel, drop=FALSE) + coord_polar(theta="y") + scale_fill_manual(values=c("R0"="blue","R1"="orangered4","R2"="orange","R3"="gold","R4"="lightcoral","R5"="firebrick2","R6"="purple","R7"="violet","R8"="coral2","R9"="darkorchid3","R10"="indianred4", "R11"="lightblue","R12"="khaki","R13"="yellow4","R14"="coral1","R15"="coral3")) + scale_y_continuous(labels = percent_format(),limits=c(0,1),breaks=c(0.25,0.5,0.75,1)) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("dominant")
ggplot(data=Fig1B_helminth_Dr, aes(x = reorder(mig,sel), y = piHap/20, fill = idHap)) + geom_bar(width=200,stat="identity") + facet_grid(mig ~ sel, drop=FALSE) + coord_polar(theta="y") + scale_fill_manual(values=c("R0"="blue","R1"="orangered4","R2"="orange","R3"="gold","R4"="lightcoral","R5"="firebrick2","R6"="purple","R7"="violet","R8"="coral2","R9"="darkorchid3","R10"="indianred4", "R11"="lightblue","R12"="khaki","R13"="yellow4","R14"="coral1","R15"="coral3")) + scale_y_continuous(labels = percent_format(),limits=c(0,1),breaks=c(0.25,0.5,0.75,1)) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("dominant")
ggplot(data=Fig1B_helminth_Ar, aes(x = reorder(mig,sel), y = piHap/20, fill = idHap)) + geom_bar(width=200,stat="identity") + facet_grid(mig ~ sel, drop=FALSE) + coord_polar(theta="y") + scale_fill_manual(values=c("R0"="blue","R1"="orangered4","R2"="orange","R3"="gold","R4"="lightcoral","R5"="firebrick2","R6"="purple","R7"="violet","R8"="coral2","R9"="darkorchid3","R10"="indianred4", "R11"="lightblue","R12"="khaki","R13"="yellow4","R14"="coral1","R15"="coral3")) + scale_y_continuous(labels = percent_format(),limits=c(0,1),breaks=c(0.25,0.5,0.75,1)) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("dominant")
ggplot(data=Fig1B_helminth_Ar, aes(x = reorder(mig,sel), y = piHap/20, fill = idHap)) + geom_bar(width=200,stat="identity") + facet_grid(mig ~ sel, drop=FALSE) + coord_polar(theta="y") + scale_fill_manual(values=c("R0"="blue","R1"="orangered4","R2"="orange","R3"="gold","R4"="lightcoral","R5"="firebrick2","R6"="purple","R7"="violet","R8"="coral2","R9"="darkorchid3","R10"="indianred4", "R11"="lightblue","R12"="khaki","R13"="yellow4","R14"="coral1","R15"="coral3")) + scale_y_continuous(labels = percent_format(),limits=c(0,1),breaks=c(0.25,0.5,0.75,1)) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("additive")
ggplot(data=Fig1B_helminth_Dr, aes(x = reorder(mig,sel), y = piHap/20, fill = idHap)) + geom_bar(width=200,stat="identity") + facet_grid(mig ~ sel, drop=FALSE) + coord_polar(theta="y") + scale_fill_manual(values=c("R0"="blue","R1"="orangered4","R2"="orange","R3"="gold","R4"="lightcoral","R5"="firebrick2","R6"="purple","R7"="violet","R8"="coral2","R9"="darkorchid3","R10"="indianred4", "R11"="lightblue","R12"="khaki","R13"="yellow4","R14"="coral1","R15"="coral3")) + scale_y_continuous(labels = percent_format(),limits=c(0,1),breaks=c(0.25,0.5,0.75,1)) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("dominant")
ggplot(data=Fig1B_helminth_D0, aes(x = reorder(mig,sel), y = piHap/20, fill = idHap)) + geom_bar(width=200,stat="identity") + facet_grid(mig ~ sel, drop=FALSE) + coord_polar(theta="y") + scale_fill_manual(values=c("R0"="blue","R1"="orangered4","R2"="orange","R3"="gold","R4"="lightcoral","R5"="firebrick2","R6"="purple","R7"="violet","R8"="coral2","R9"="darkorchid3","R10"="indianred4", "R11"="lightblue","R12"="khaki","R13"="yellow4","R14"="coral1","R15"="coral3")) + scale_y_continuous(labels = percent_format(),limits=c(0,1),breaks=c(0.25,0.5,0.75,1)) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("dominant")
ggplot(data=Fig1B_helminth_D0, aes(x = reorder(mig,sel), y = piHap/20, fill = idHap)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE)
ggplot(data=Fig1B_helminth_D0, aes(x = reorder(mig,sel), y = piHap/20, fill = idHap)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE)
Fig1B_helminth_A-sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-A-0.csv")
Fig1B_helminth_A.sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-A-0.csv")
View(Fig1B_helminth_A.sfs)
ggplot(data=Fig1B_helminth_D.sfs, aes(x = reorder(mig,sel), y = piHap/20, fill = idHap)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE)
Fig1B_helminth_A.sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-A-0.csv")
Fig1B_helminth_A.sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-A-8.0.csv")
Fig1B_helminth_D.sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-D-0.csv")
Fig1B_helminth_D.sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-D-8.0.csv")
Fig1B_helminth_A0.sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-A-0.csv")
Fig1B_helminth_Ar.sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-A-8.0.csv")
Fig1B_helminth_D0.sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-D-0.csv")
Fig1B_helminth_Dr.sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-D-8.0.csv")
ggplot(data=Fig1B_helminth_Dr.sfs, aes(x = reorder(mig,sel), y = Nbin, fill = Fbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE)
ggplot(data=Fig1B_helminth_Dr.sfs, aes(x = reorder(mig,sel), y = Nbin, fill = Fbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE)
ggplot(data=Fig1B_helminth_Dr.sfs, aes(x = reorder(mig,sel), y = Nbin, fill = Fbin)) + geom_bar() + facet_grid(mig ~ sel, drop=FALSE)
ggplot(data=Fig1B_helminth_Dr.sfs, aes(x = reorder(mig,sel), y = Nbin, fill = Fbin)) + geom_bar(stat="identity") + facet_grid(mig ~ sel, drop=FALSE)
ggplot(data=Fig1B_helminth_Dr.sfs, aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE)
ggplot(data=subset(Fig1B_helminth_Dr.sfs, Fbin != "R0", aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE)
)
ggplot(data=subset(Fig1B_helminth_Dr.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE)
ggplot(data=Fig1B_helminth_Dr.sfs, aes(x = reorder(mig,sel), y = Nbin, fill = Fbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE)+ scale_fill_manual(values=c("R0"="blue","R1"="orangered4","R2"="orange","R3"="gold","R4"="lightcoral","R5"="firebrick2","R6"="purple","R7"="violet","R8"="coral2","R9"="darkorchid3","R10"="indianred4", "R11"="lightblue","R12"="khaki","R13"="yellow4","R14"="coral1","R15"="coral3")) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("dominant")
ggplot(data=Fig1B_helminth_Dr.sfs, aes(x = reorder(mig,sel), y = Nbin, fill = Fbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_Dr.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_Dr.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme_void() + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_Dr.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_Dr.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_Dr.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_Dr.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_D0.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_D0.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_A0.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
Fig1B_helminth_A0.sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-A-0.csv")
Fig1B_helminth_Ar.sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-A-8.0.csv")
Fig1B_helminth_D0.sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-D-0.csv")
Fig1B_helminth_Dr.sfs <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-D-8.0.csv")
ggplot(data=subset(Fig1B_helminth_A0.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
rep(1,2)
rep(1:10,2)
rep((1.2),2)
rep((1,2),2)
rep([1,2],2)
rep(x(1,2),2)
rep(c(1,2),2)
rep(c(1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20),2)
which(Fig1B_helminth_A.sfs$Fbin == "R0")
length(which(Fig1B_helminth_A.sfs$Fbin == "R0"))
rep(c(1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20),100)
actual=rep(c(1,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20),100)
length(actual)
Fig1B_helminth_A.sfs$act = actual * Fig1B_helminth_A.sfs$Nbin
View(Fig1B_helminth_A.sfs)
ggplot(data=subset(Fig1B_helminth_A.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
View(Fig1B_helminth_A0.sfs)
Fig1B_helminth_A0.sfs$act = actual * Fig1B_helminth_A0.sfs$Nbin
Fig1B_helminth_D0.sfs$act = actual * Fig1B_helminth_D0.sfs$Nbin
Fig1B_helminth_Dr.sfs$act = actual * Fig1B_helminth_Dr.sfs$Nbin
Fig1B_helminth_Ar.sfs$act = actual * Fig1B_helminth_Ar.sfs$Nbin
ggplot(data=Fig1B_helminth_Ar.sfs, aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=Fig1B_helminth_Ar.sfs, aes(x = Fbin, y = act)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=Fig1B_helminth_Ar.sfs, aes(x = Fbin/20000, y = act)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=Fig1B_helminth_Ar.sfs, aes(x = Fbin, y = act/20000)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=Fig1B_helminth_Dr.sfs, aes(x = Fbin, y = act/20000)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_A.sfs, Fbin != "R0"), aes(x = Fbin, y = act)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_A0.sfs, Fbin != "R0"), aes(x = Fbin, y = act)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_Ar.sfs, Fbin != "R0"), aes(x = Fbin, y = act)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_Dr.sfs, Fbin != "R0"), aes(x = Fbin, y = act)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_Dr.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_D0.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominant")
ggplot(data=subset(Fig1B_helminth_D0.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominantNoR")
ggplot(data=subset(Fig1B_helminth_Dr.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("dominantR")
ggplot(data=subset(Fig1B_helminth_Ar.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("additiveR")
ggplot(data=subset(Fig1B_helminth_A0.sfs, Fbin != "R0"), aes(x = Fbin, y = Nbin)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("additiveNoR")
library(readr)
Fig1B_helminth_D_0_pairwise <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-D-0-pairwise.csv",
col_types = cols(pibin = col_character()))
View(Fig1B_helminth_D_0_pairwise)
ggplot(data=Fig1B_helminth_D_0_pairwise, aes(x = pibin, y = pifreq)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("additiveNoR")
ggplot(data=Fig1B_helminth_D_0_pairwise, aes(x = pibin, y = pifreq/20000)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("additiveNoR")
ggplot(data=subset(Fig1B_helminth_D_0_pairwise, pibin != "0"), aes(x = pibin, y = pifreq)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("additiveNoR")
library(readr)
Fig1B_helminth_A_0_pairwise <- read_csv("~/github_repos/helminth_selection/example_data/Fig1B_helminth-A-0-pairwise.csv",col_types = cols(pibin = col_character()))
ggplot(data=subset(Fig1B_helminth_A_0_pairwise, pibin != "0"), aes(x = pibin, y = pifreq)) + geom_col() + facet_grid(mig ~ sel, drop=FALSE) + theme(axis.title.y=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.title.x=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank()) + ggtitle("additiveNoR")
q()
setwd("~/github_repos/popsizeabc/estim")
rm(list=ls())
library(abc)
source('generations.R')
source('myfunctions.R')
# loads simulated samples, MAF 20% for both AFS and LD stats
infile_params="../simu_stat/test_n30_s10.params"
infile_stat="../simu_stat/test_n30_s10_mac6_macld6.stat"
n=30 # haploid sample size
mac=6 # minor allele count
source("load_simu.R")
# loads observed samples
infile_obs="../cattle_data/res/test_Jersey_n30_mac6_macld6.stat"
source("load_obs.R")
# choice of summary stats
nb_afs=n/2-mac+2
ind_afs=1:nb_afs
ind_ld=nb_afs+(1:(nb_dist-1)) # the LD statistic corresponding to the shortest distance is removed
# ind_ibs=nb_afs+nb_dist+(1:(nb_m*nb_prob))
ind_stat=c(ind_afs,ind_ld) # only AFS and LD statistics
# abc
abc_res=abc(obs[ind_stat],log10_pop(params)[,-1],stat[,ind_stat],tol=0.005,method="neuralnet")
abc_estim=summary(abc_res,print=FALSE)[3,] # median
#abc_estim=summary(abc_res,print=FALSE)[5,] # mode
# plot
pdf('estim_Holstein_MAF20.pdf',height=4,width=4)
par(mar=c(3,3,1,2),cex=0.7,mgp=c(1.5,0.5,0))
plot(NA,xlim=c(0,5),ylim=c(2,5),xlab="years before present (log scale)",ylab="effective population size (log scale)",axes=F)
axis(1,at=0:5,labels=c("0","10","100","1,000","10,000","100,000"))
axis(2,at=c(2,log10(300),3,log10(3000),4,log10(30000),5),labels=c("100","300","1,000","3,000","10,000","30,000","100,000"))
lines(years,abc_estim[-1],type="s",lwd=2) # the first term of the vector is removed because it corresponds to the recombination rate
lines(c(4,4),c(2.1,5),lwd=3,lty=3)
text(x=4,y=2,labels="domestication")
dev.off()
# plot detailed information about the estimation of all parameters
plot(abc_res,param=log10_pop(params)[,-1],file='estim_Holstein_MAF20_detailed')
# sample parameter values from the posterior distribution
nb_rep=10
h=hist(abc_res,breaks=50,plot=FALSE)
post_params=array(data=0,dim=c(nb_rep,dim(params)[2]))
post_params[,1]=10^(-8) # fixed mutation rate
for (rep in 1:nb_rep){
post_params[rep,2]=sample(h[[1]]$mids,1,prob=h[[1]]$density) # recombination rate
post_params[rep,3]=sample(h[[2]]$mids,1,prob=h[[2]]$density) # population size in the most recent time window
for (j in 4:dim(params)[2]){ # population size in other time windows
post_params[rep,j]=sample(h[[j-1]]$mids,1,prob=h[[j-1]]$density)
d=abs(post_params[rep,j]-post_params[rep,j-1])
while (d>1){
post_params[rep,j]=sample(h[[j-1]]$mids,1,prob=h[[j-1]]$density)
d=abs(post_params[rep,j]-post_params[rep,j-1])
}
}
}
post_params[,-(1:2)]=10**post_params[,-(1:2)]
write.table(post_params,file='estim_Holstein_MAF20.post_params',quote=F,row.names=F,col.names=F)
install.packages("abc")
install.packages("abcrf")
rm(list=ls())
library(abc)
source('generations.R')
source('myfunctions.R')
# loads simulated samples, MAF 20% for both AFS and LD stats
infile_params="../simu_stat/test_n30_s10.params"
infile_stat="../simu_stat/test_n30_s10_mac6_macld6.stat"
n=30 # haploid sample size
mac=6 # minor allele count
source("load_simu.R")
# loads observed samples
infile_obs="../cattle_data/res/test_Jersey_n30_mac6_macld6.stat"
source("load_obs.R")
# choice of summary stats
nb_afs=n/2-mac+2
ind_afs=1:nb_afs
ind_ld=nb_afs+(1:(nb_dist-1)) # the LD statistic corresponding to the shortest distance is removed
# ind_ibs=nb_afs+nb_dist+(1:(nb_m*nb_prob))
ind_stat=c(ind_afs,ind_ld) # only AFS and LD statistics
# abc
abc_res=abc(obs[ind_stat],log10_pop(params)[,-1],stat[,ind_stat],tol=0.005,method="neuralnet")
abc_estim=summary(abc_res,print=FALSE)[3,] # median
#abc_estim=summary(abc_res,print=FALSE)[5,] # mode
# plot
pdf('estim_Holstein_MAF20.pdf',height=4,width=4)
par(mar=c(3,3,1,2),cex=0.7,mgp=c(1.5,0.5,0))
plot(NA,xlim=c(0,5),ylim=c(2,5),xlab="years before present (log scale)",ylab="effective population size (log scale)",axes=F)
axis(1,at=0:5,labels=c("0","10","100","1,000","10,000","100,000"))
axis(2,at=c(2,log10(300),3,log10(3000),4,log10(30000),5),labels=c("100","300","1,000","3,000","10,000","30,000","100,000"))
lines(years,abc_estim[-1],type="s",lwd=2) # the first term of the vector is removed because it corresponds to the recombination rate
lines(c(4,4),c(2.1,5),lwd=3,lty=3)
text(x=4,y=2,labels="domestication")
dev.off()
# plot detailed information about the estimation of all parameters
plot(abc_res,param=log10_pop(params)[,-1],file='estim_Holstein_MAF20_detailed')
# sample parameter values from the posterior distribution
nb_rep=10
h=hist(abc_res,breaks=50,plot=FALSE)
post_params=array(data=0,dim=c(nb_rep,dim(params)[2]))
post_params[,1]=10^(-8) # fixed mutation rate
for (rep in 1:nb_rep){
post_params[rep,2]=sample(h[[1]]$mids,1,prob=h[[1]]$density) # recombination rate
post_params[rep,3]=sample(h[[2]]$mids,1,prob=h[[2]]$density) # population size in the most recent time window
for (j in 4:dim(params)[2]){ # population size in other time windows
post_params[rep,j]=sample(h[[j-1]]$mids,1,prob=h[[j-1]]$density)
d=abs(post_params[rep,j]-post_params[rep,j-1])
while (d>1){
post_params[rep,j]=sample(h[[j-1]]$mids,1,prob=h[[j-1]]$density)
d=abs(post_params[rep,j]-post_params[rep,j-1])
}
}
}
post_params[,-(1:2)]=10**post_params[,-(1:2)]
write.table(post_params,file='estim_Holstein_MAF20.post_params',quote=F,row.names=F,col.names=F)
abc_res=abc(obs[ind_stat],log10_pop(params)[,-1],stat[,ind_stat],tol=0.005,method="neuralnet")
rm(list=ls())
library(abc)
source('generations.R')
source('myfunctions.R')
rm(list=ls())
library(abc)
source('generations.R')
source('myfunctions.R')
infile_params="../simu_stat/test_n30_s10.params"
infile_params
infile_stat="../simu_stat/test_n30_s10_mac6_macld6.stat"
n=30 # haploid sample size
mac=6 # minor allele count
nrows <- -1
params_all <- read.table(infile_params,nrows=nrows)
stat_all <- read.table(infile_stat,nrows=nrows)
# loads simulated samples, MAF 20% for both AFS and LD stats
infile_params="../simu_stat/test_n30_s10.params"
infile_stat="../simu_stat/test_n30_s10_mac6_macld6.stat"
n=30 # haploid sample size
mac=6 # minor allele count
source("load_simu.R")
infile_obs="../cattle_data/res/test_Jersey_n30_mac6_macld6.stat"
source("load_obs.R")
obs
nrows <- -1
params_all <- read.table(infile_params,nrows=nrows)
stat_all <- read.table(infile_stat,nrows=nrows)
params_all
stat_all
colnames(params_all) <- c("m","r",paste("N",round(generations_numbers),sep=""))
params_all
d=rep("?",nb_dist)
ind=which(ld_distances<10000)
d[ind]=paste(round(ld_distances[ind]),'b',sep="")
d[-ind]=paste(round(ld_distances[-ind]/1000),'kb',sep="")
var_names1=c("AFS0",paste("AFS_",1:(n/2),sep=""),paste("LD_zyg_",d,sep=""))
probs=c(0.0001,0.001,0.01,0.1,0.25,0.5,0.75,0.9,0.99,0.999,0.9999)
nb_prob=length(probs)
m=c(1)
nb_m=length(m)
var_names2=paste("IBS",m[1],"_",probs,sep="")
colnames(stat_all) <- c(var_names1,var_names2)
View(stat_all)
var_names1=c("AFS0",paste("AFS_",1:(n/2),sep=""),paste("LD_zyg_",d,sep=""))
#probs=c(0.0001,0.001,0.01,0.1,0.25,0.5,0.75,0.9,0.99,0.999,0.9999)
#nb_prob=length(probs)
m=c(1)
nb_m=length(m)
#var_names2=paste("IBS",m[1],"_",probs,sep="")
colnames(stat_all) <- c(var_names1)
# remove stats for allele counts below mac
if (mac>1){
ind_rem=2:mac
stat_all=stat_all[,-ind_rem]
}
# remove missing values
gr <- good.rows(stat_all)
stat <- stat_all[gr,]
params <- params_all[gr,]
print(paste("stat matrix dimensions :",dim(stat)[1],dim(stat)[2],sep=" "))
print(paste("params matrix dimensions :",dim(params)[1],dim(params)[2],sep=" "))
nb_afs=n/2-mac+2
ind_afs=1:nb_afs
ind_ld=nb_afs+(1:(nb_dist-1)) # the LD statistic corresponding to the shortest distance is removed
# ind_ibs=nb_afs+nb_dist+(1:(nb_m*nb_prob))
ind_stat=c(ind_afs,ind_ld) # only AFS and LD statistics
abc_res=abc(obs[ind_stat],log10_pop(params)[,-1],stat[,ind_stat],tol=0.005,method="neuralnet")
abc_res=abc(obs[ind_stat],log10_pop(params)[,-1],stat[,ind_stat],tol=0.005,method="neuralnet")
abc_estim=summary(abc_res,print=FALSE)[3,] # median
ind_stat
obs
obs(ind_stat)
obs[ind_stat]
params
abc_res=abc(obs[ind_stat],log10_pop(params),stat,tol=0.005,method="neuralnet")
abc_estim=summary(abc_res,print=FALSE)[3,] # median
abc_res=abc(obs[ind_stat],log10_pop(params),stat,tol=0.005,method="neuralnet")
obs
length(obs)
ind_stat
params
abc_res=abc(obs,log10_pop(params),stat,tol=0.005,method="neuralnet")
abc_res=abc(obs,params,stat,tol=0.005,method="neuralnet")
params[,-1]
abc_res=abc(obs[ind_stat],log10_pop(params)[,-1],stat[,ind_stat],tol=0.005,method="neuralnet")
stat[,ind_stat]
abc_res=abc(obs,log10_pop(params)[,-1],stat,tol=0.005,method="neuralnet")
abc_res=abc(obs,log10_pop(params)[,-1],stat,tol=0.005,method="loclinear")
abc_res=abc(obs,log10_pop(params),stat,tol=0.005,method="loclinear")
length(obs)
length(params)
dim(params)
dim(stat)
abc_res=abc(obs,log10_pop(params)[,-1],stat,tol=0.005,method="loclinear")
abc_res=abc(obs,log10_pop(params)[,-1],stat,tol=0.005,method="rejection")
abc_estim=summary(abc_res,print=FALSE)[3,] # median
abc_res
abc_res=abc(obs,log10_pop(params)[,-1],stat,tol=0.005,method="ridge")
abc_res=abc(obs,params[,-1],stat,tol=0.005,method="ridge")
abc_res=abc(obs,params[,-1],stat,tol=0.005,method="neuralnet")
abc_res=abc(obs,params,stat,tol=0.005,method="neuralnet")
abc_res=abc(obs,params,stat,tol=0.05,method="neuralnet")
abc_estim=summary(abc_res,print=FALSE)[3,] # median
abc_estim
pdf('estim_Holstein_MAF20.pdf',height=4,width=4)
par(mar=c(3,3,1,2),cex=0.7,mgp=c(1.5,0.5,0))
plot(NA,xlim=c(0,5),ylim=c(2,5),xlab="years before present (log scale)",ylab="effective population size (log scale)",axes=F)
axis(1,at=0:5,labels=c("0","10","100","1,000","10,000","100,000"))
axis(2,at=c(2,log10(300),3,log10(3000),4,log10(30000),5),labels=c("100","300","1,000","3,000","10,000","30,000","100,000"))
lines(years,abc_estim[-1],type="s",lwd=2) # the first term of the vector is removed because it corresponds to the recombination rate
lines(c(4,4),c(2.1,5),lwd=3,lty=3)
text(x=4,y=2,labels="domestication")
dev.off()
abc_res=abc(obs,params[,-1],stat,tol=0.05,method="neuralnet")
pdf('estim_Holstein_MAF20.pdf',height=4,width=4)
par(mar=c(3,3,1,2),cex=0.7,mgp=c(1.5,0.5,0))
plot(NA,xlim=c(0,5),ylim=c(2,5),xlab="years before present (log scale)",ylab="effective population size (log scale)",axes=F)
axis(1,at=0:5,labels=c("0","10","100","1,000","10,000","100,000"))
axis(2,at=c(2,log10(300),3,log10(3000),4,log10(30000),5),labels=c("100","300","1,000","3,000","10,000","30,000","100,000"))
lines(years,abc_estim[-1],type="s",lwd=2) # the first term of the vector is removed because it corresponds to the recombination rate
lines(c(4,4),c(2.1,5),lwd=3,lty=3)
text(x=4,y=2,labels="domestication")
dev.off()
pdf('estim_Holstein_MAF20.pdf',height=4,width=4)
par(mar=c(3,3,1,2),cex=0.7,mgp=c(1.5,0.5,0))
plot(NA,xlim=c(0,5),ylim=c(2,5),xlab="years before present (log scale)",ylab="effective population size (log scale)",axes=F)
axis(1,at=0:5,labels=c("0","10","100","1,000","10,000","100,000"))
axis(2,at=c(2,log10(300),3,log10(3000),4,log10(30000),5),labels=c("100","300","1,000","3,000","10,000","30,000","100,000"))
lines(years,abc_estim,type="s",lwd=2) # the first term of the vector is removed because it corresponds to the recombination rate
lines(c(4,4),c(2.1,5),lwd=3,lty=3)
text(x=4,y=2,labels="domestication")
dev.off()
abc_res=abc(obs[ind_stat],log10_pop(params)[,-1],stat[,ind_stat],tol=0.05,method="neuralnet")
abc_estim=summary(abc_res,print=FALSE)[3,] # median
#abc_estim=summary(abc_res,print=FALSE)[5,] # mode
# plot
pdf('estim_Holstein_MAF20.pdf',height=4,width=4)
par(mar=c(3,3,1,2),cex=0.7,mgp=c(1.5,0.5,0))
plot(NA,xlim=c(0,5),ylim=c(2,5),xlab="years before present (log scale)",ylab="effective population size (log scale)",axes=F)
axis(1,at=0:5,labels=c("0","10","100","1,000","10,000","100,000"))
axis(2,at=c(2,log10(300),3,log10(3000),4,log10(30000),5),labels=c("100","300","1,000","3,000","10,000","30,000","100,000"))
lines(years,abc_estim[-1],type="s",lwd=2) # the first term of the vector is removed because it corresponds to the recombination rate
lines(c(4,4),c(2.1,5),lwd=3,lty=3)
text(x=4,y=2,labels="domestication")
dev.off()
plot(abc_res,param=log10_pop(params)[,-1],file='estim_Holstein_MAF20_detailed')
# sample parameter values from the posterior distribution
nb_rep=10
h=hist(abc_res,breaks=50,plot=FALSE)
post_params=array(data=0,dim=c(nb_rep,dim(params)[2]))
post_params[,1]=10^(-8) # fixed mutation rate
for (rep in 1:nb_rep){
post_params[rep,2]=sample(h[[1]]$mids,1,prob=h[[1]]$density) # recombination rate
post_params[rep,3]=sample(h[[2]]$mids,1,prob=h[[2]]$density) # population size in the most recent time window
for (j in 4:dim(params)[2]){ # population size in other time windows
post_params[rep,j]=sample(h[[j-1]]$mids,1,prob=h[[j-1]]$density)
d=abs(post_params[rep,j]-post_params[rep,j-1])
while (d>1){
post_params[rep,j]=sample(h[[j-1]]$mids,1,prob=h[[j-1]]$density)
d=abs(post_params[rep,j]-post_params[rep,j-1])
}
}
}
post_params[,-(1:2)]=10**post_params[,-(1:2)]
write.table(post_params,file='estim_Holstein_MAF20.post_params',quote=F,row.names=F,col.names=F)
dev.off()
lot(abc_res,param=log10_pop(params)[,-1]
)
plot(abc_res,param=log10_pop(params)[,-1])
abc_res
params
log10_pop(params)
abc_res
plot(abs_res)
plot(abc_res)
plot(abc_res,param=log10_pop(params))
plot(abc_res,param=log10_pop(params)[,-1])
plot(abc_res,param=log10_pop(params)[,-1],replace=TRUE)
abc_res=abc(obs[ind_stat],log10_pop(params)[,-1],stat[,ind_stat],tol=0.5,method="neuralnet")
abc_estim=summary(abc_res,print=FALSE)[3,] # median
#abc_estim=summary(abc_res,print=FALSE)[5,] # mode
# plot
pdf('estim_Holstein_MAF20.pdf',height=4,width=4)
par(mar=c(3,3,1,2),cex=0.7,mgp=c(1.5,0.5,0))
plot(NA,xlim=c(0,5),ylim=c(2,5),xlab="years before present (log scale)",ylab="effective population size (log scale)",axes=F)
axis(1,at=0:5,labels=c("0","10","100","1,000","10,000","100,000"))
axis(2,at=c(2,log10(300),3,log10(3000),4,log10(30000),5),labels=c("100","300","1,000","3,000","10,000","30,000","100,000"))
lines(years,abc_estim[-1],type="s",lwd=2) # the first term of the vector is removed because it corresponds to the recombination rate
lines(c(4,4),c(2.1,5),lwd=3,lty=3)
text(x=4,y=2,labels="domestication")
dev.off()
# plot detailed information about the estimation of all parameters
plot(abc_res,param=log10_pop(params)[,-1],file='estim_Holstein_MAF20_detailed')
# sample parameter values from the posterior distribution
nb_rep=10
h=hist(abc_res,breaks=50,plot=FALSE)
post_params=array(data=0,dim=c(nb_rep,dim(params)[2]))
post_params[,1]=10^(-8) # fixed mutation rate
for (rep in 1:nb_rep){
post_params[rep,2]=sample(h[[1]]$mids,1,prob=h[[1]]$density) # recombination rate
post_params[rep,3]=sample(h[[2]]$mids,1,prob=h[[2]]$density) # population size in the most recent time window
for (j in 4:dim(params)[2]){ # population size in other time windows
post_params[rep,j]=sample(h[[j-1]]$mids,1,prob=h[[j-1]]$density)
d=abs(post_params[rep,j]-post_params[rep,j-1])
while (d>1){
post_params[rep,j]=sample(h[[j-1]]$mids,1,prob=h[[j-1]]$density)
d=abs(post_params[rep,j]-post_params[rep,j-1])
}
}
}
post_params[,-(1:2)]=10**post_params[,-(1:2)]
write.table(post_params,file='estim_Holstein_MAF20.post_params',quote=F,row.names=F,col.names=F)
